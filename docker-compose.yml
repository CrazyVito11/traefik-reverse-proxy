version: "3.8"

services:
  traefik:
    image: traefik:v2.11
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "${TRAEFIK_IP_BINDING:-127.0.0.1}:80:80"
      - "${TRAEFIK_IP_BINDING:-127.0.0.1}:443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/traefik.yml:ro"
      - "./traefik-dynamic.yml:/traefik-dynamic.yml:ro"
      - "./tls:/tls:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http,https"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DASHBOARD_DOMAIN:-traefik.localhost}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-dashboard-auth"

      # Authentication middleware
      # Comment the next line if you don't want any authentication (not recommended)
      - "traefik.http.middlewares.traefik-dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_BASICAUTH_USERS}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - default
      - traefik-reverse-proxy

  jaeger:
    image: jaegertracing/all-in-one:1.58
    container_name: "jaeger"
    restart: unless-stopped
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-reverse-proxy"
      - "traefik.http.routers.jaeger.rule=Host(`${JAEGER_UI_DOMAIN:-jaeger.localhost}`)"
      - "traefik.http.routers.jaeger.entrypoints=http,https"
      - "traefik.http.routers.jaeger.tls=true"
      - "traefik.http.routers.jaeger.middlewares=jaeger-ui-auth"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

      # Authentication middleware
      # Comment the next line if you don't want any authentication (not recommended)
      - "traefik.http.middlewares.jaeger-ui-auth.basicauth.users=${JAEGER_UI_BASICAUTH_USERS}"

networks:
  traefik-reverse-proxy:
    name: traefik-reverse-proxy
    external: true
